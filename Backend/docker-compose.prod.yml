version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: esential-barber-db
    environment:
      POSTGRES_DB: esentialbarber
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./springboot.app/apply-database-indexes.sql:/docker-entrypoint-initdb.d/01-init.sql
    networks:
      - esential-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d esentialbarber"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Aplicación Spring Boot
  backend:
    build:
      context: .
      dockerfile: springboot.app/Dockerfile
    container_name: esential-barber-backend
    env_file:
      - .env.prod
    ports:
      - "127.0.0.1:8080:8080"  # Solo expuesto a localhost (Nginx hará de proxy)
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - esential-network
    restart: unless-stopped
    volumes:
      - ./springboot.app/logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  postgres_data:
    driver: local

networks:
  esential-network:
    driver: bridge
