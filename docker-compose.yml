version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: esential-barber-db
    environment:
      POSTGRES_DB: esentialbarber
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./Backend/springboot.app/apply-database-indexes.sql:/docker-entrypoint-initdb.d/01-init.sql
    networks:
      - esential-network
    restart: unless-stopped

  # Aplicación Spring Boot
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: esential-barber-backend
    environment:
      # Configuración de Spring
      SPRING_PROFILES_ACTIVE: local
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/esentialbarber
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin123
      
      # Seguridad
      SPRING_SECURITY_USER_NAME: admin
      SPRING_SECURITY_USER_PASSWORD: admin123
      
      # Google OAuth (para desarrollo local)
      GOOGLE_CLIENT_ID: 861425306153-5odf703ho7dt8at2r5jqpu2t9ei0iakg.apps.googleusercontent.com
      GOOGLE_CLIENT_SECRET: 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
      APP_GOOGLE_REDIRECT_URI: http://localhost:8080/auth/google/callback
      ADMIN_EMAIL: elemenbarber@gmail.com
      ADMIN_GOOGLE_CALENDAR_ENABLED: true
      
      # Email
      MAIL_HOST: smtp.gmail.com
      MAIL_PORT: 587
      MAIL_USERNAME: elemenbarber@gmail.com
      MAIL_PASSWORD: psqv hxns rxhi eoue
      
      # CORS para desarrollo
      CORS_ALLOWED_ORIGINS: http://localhost:3000,http://localhost:5173,http://localhost:4173
      APP_FRONTEND_BASE_URL: http://localhost:3000
      
      # Configuración JVM optimizada para desarrollo
      JAVA_OPTS: "-Xmx1g -Xms512m -XX:+UseG1GC"
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - esential-network
    restart: unless-stopped
    volumes:
      - ./Backend/springboot.app/logs:/app/logs

volumes:
  postgres_data:
    driver: local

networks:
  esential-network:
    driver: bridge
